{"version":3,"sources":["components/Product.js","components/AddProduct.js","components/Main.js","components/Oneproduct.js","components/EditProduct.js","App.js","serviceWorker.js","index.js"],"names":["Product","id","this","props","delete","_this","react_default","a","createElement","index_es","data","map","item","button","component","Link","to","concat","productId","key","primary","name","Edit_default","onClick","bind","Delete_default","Component","Add","state","price","updateName","event","setState","target","value","updatePrice","addToDatabase","options","method","body","JSON","stringify","headers","Content-Type","fetch","then","response","ok","alert","TextField_default","label","onChange","type","color","MyPaper","styled","Paper","_templateObject","Main","product","isLoaded","removeItem","console","log","url","json","componentDidMount","reposne","componentDidUpdate","AddProduct","Fragment","components_Product","OneProduct","match","params","itemId","_this$state","variant","Square","div","EditProduct_templateObject","EditProduct","putToDatabase","credentials","App","className","BrowserRouter","basename","process","Route","exact","path","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.00b50723.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { List, ListItemText, ListItem, Paper, ListItemSecondaryAction, IconButton, Button, CircularProgress } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit'\r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\n\r\n\r\n\r\nclass Product extends Component{\r\n\r\n    delete(id)\r\n    {\r\n        this.props.delete(id)\r\n    }\r\n\r\n    render()\r\n    {\r\n\r\n        return(\r\n\r\n            <List>\r\n                {this.props.data.map((item, id)=>\r\n                   <ListItem button component={Link} to={`/product/${item.productId}`} key={id}>\r\n                        <ListItemText primary={item.name}/>\r\n                            <ListItemSecondaryAction>\r\n                            <IconButton component={Link} to={`/edit_product/${item.productId}`}>\r\n                                <EditIcon/>\r\n                            </IconButton>\r\n\r\n                            <IconButton onClick={this.delete.bind(this,item.productId)}>\r\n                                    <DeleteIcon />\r\n                            </IconButton>\r\n\r\n                        </ListItemSecondaryAction>\r\n                   </ListItem>\r\n\r\n                    )}\r\n            </List>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Product\r\n","import React, { Component } from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Fab, Paper } from '@material-ui/core';\r\n\r\nclass Add extends Component {\r\n    state = {\r\n        name:\"\",\r\n        price:\"\"\r\n\r\n    }\r\n    updateName = (event) =>\r\n    {\r\n        this.setState({name: event.target.value})\r\n\r\n    }\r\n    updatePrice = (event)=>\r\n    {\r\n        this.setState({price: event.target.value})\r\n    }\r\n    addToDatabase = () =>\r\n    {\r\n        const options = {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                name: this.state.name,\r\n                price: this.state.price\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        fetch('https://recrutationexercise1.azurewebsites.net/api/product',options)\r\n        .then((response)=> {\r\n            if(response.ok)\r\n            {\r\n                alert(\"Add to database\")\r\n\r\n            }\r\n            else{\r\n                alert(\"Cant add to database\")\r\n            }\r\n        })\r\n\r\n\r\n    this.setState({name:\"\",price:\"\"})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n\r\n        <Paper>\r\n            <TextField label=\"Product Name\" value={this.state.name} onChange={this.updateName.bind(this)}></TextField>\r\n            <TextField label=\"Price Product\" type=\"number\" value={this.state.price} onChange={this.updatePrice.bind(this)}></TextField>\r\n            <Fab color=\"secondary\" onClick={this.addToDatabase.bind(this)}>Add</Fab>\r\n        </Paper>\r\n\r\n        )\r\n    }\r\n}\r\nexport default Add;","import React, { Component } from 'react'\r\nimport Product from './Product';\r\nimport Add from './AddProduct';\r\nimport styled from 'styled-components'\r\nimport { Paper, CircularProgress } from '@material-ui/core'\r\n\r\nconst MyPaper = styled(Paper)`\r\nwidth: 450px;\r\nmargin-top: 20px;\r\n`\r\nclass Main extends Component {\r\n\r\n\r\n  state = {\r\n    product: [],\r\n    isLoaded: false\r\n  }\r\n  removeItem = (id) => {\r\n    console.log(id);\r\n    const url = `https://recrutationexercise1.azurewebsites.net/api/product`\r\n    fetch(url + '/' + id, {\r\n      method: 'delete'\r\n    })\r\n      .then(response => response.json())\r\n\r\n    alert(\"Delete item\");\r\n  }\r\n\r\n  componentDidMount = () => {\r\n\r\n    fetch(\"https://recrutationexercise1.azurewebsites.net/api/product\")\r\n      .then(reposne => reposne.json())\r\n      .then(json => this.setState({ product: json, isLoaded: true })\r\n      )\r\n\r\n\r\n  }\r\n  componentDidUpdate = () => {\r\n\r\n    fetch(\"https://recrutationexercise1.azurewebsites.net/api/product\")\r\n      .then(reposne => reposne.json())\r\n      .then(json => this.setState({ product: json, isLoaded: true })\r\n      )\r\n\r\n\r\n  }\r\n  render() {\r\n    if (this.state.isLoaded !== true) {\r\n      return (\r\n      <div>\r\n        <h1>Coffee Mug</h1>\r\n        <Add ></Add>\r\n        <MyPaper>\r\n          <CircularProgress color=\"secondary\"></CircularProgress>\r\n        </MyPaper>\r\n      </div>)\r\n    }\r\n    else {\r\n      return (\r\n        <>\r\n        <h1>Coffee Mug</h1>\r\n          <Add ></Add>\r\n          <MyPaper>\r\n            <Product data={this.state.product} delete={this.removeItem}></Product>\r\n          </MyPaper>\r\n        </>\r\n      )\r\n    }\r\n  }\r\n}\r\nexport default Main","import React, { Component } from 'react'\r\nimport { CircularProgress,Button } from '@material-ui/core';\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass OneProduct extends Component{\r\n\r\n    state ={\r\n        product: [],\r\n        isLoaded: false\r\n    }\r\n\r\n    componentDidMount = () =>\r\n    {\r\n        const id = this.props.match.params.itemId;\r\n        console.log(id);\r\n        fetch(\"https://recrutationexercise1.azurewebsites.net/api/product/\"+id)\r\n        .then(reposne => reposne.json())\r\n        .then(json => this.setState({product: json, isLoaded: true}))\r\n    }\r\n\r\n    render(){\r\n        const { product,isLoaded } = this.state;\r\n\r\n        if(isLoaded !== true)\r\n        {\r\n            return(\r\n                <div>\r\n                    <CircularProgress color=\"secondary\"> </CircularProgress>\r\n                </div>\r\n            )\r\n        }else{\r\n\r\n\r\n        return(\r\n\r\n            <div><h1>Product</h1>\r\n\r\n                <ul>\r\n                    <li>\r\n                        Produkt ID: {product.productId}\r\n                    </li>\r\n                    <li>\r\n                        Name: {product.name}\r\n                    </li>\r\n                    <li>\r\n                        Price: {product.price}\r\n                    </li>\r\n                </ul>\r\n                <Button color=\"secondary\" variant=\"contained\" component={Link} to={'/'}> Back to start</Button>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n}\r\nexport default OneProduct;","import React, { Component } from 'react'\r\nimport { TextField, Button, } from '@material-ui/core';\r\nimport styled from 'styled-components'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Square = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 300px;\r\n    background-color: white;\r\n    border-radius: 10px;\r\n`\r\nclass EditProduct extends Component{\r\n    state ={\r\n        product : [],\r\n        productId:'',\r\n        name : '',\r\n        price : '',\r\n    }\r\n    componentDidMount = () =>\r\n    {\r\n        const id = this.props.match.params.itemId;\r\n        console.log(id);\r\n        fetch(\"https://recrutationexercise1.azurewebsites.net/api/product/\"+id)\r\n        .then(reposne => reposne.json())\r\n        .then(json => this.setState({productId: json.productId,name: json.name, price : json.price, isLoaded: true}))\r\n    }\r\n    updateName = (event) =>\r\n    {\r\n        this.setState({name: event.target.value})\r\n    }\r\n    updatePrice = (event)=>\r\n    {\r\n\r\n        this.setState({price: event.target.value})\r\n    }\r\n    putToDatabase =() =>\r\n    {\r\n        console.log(this.state.productId)\r\n        const id = this.props.match.params.itemId;\r\n        let url = 'https://recrutationexercise1.azurewebsites.net/api/product/' + id\r\n        const options = {\r\n            method: 'PUT',\r\n            credentials: 'include',\r\n            body: JSON.stringify({\r\n                productId : this.state.productId,\r\n                name: this.state.name,\r\n                price: this.state.price\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        fetch(url,options)\r\n        .then(alert(\"Update In Database\"))\r\n    }\r\n\r\n   render(){\r\n       const { name,price,isLoaded } = this.state;\r\n       if(isLoaded !== true)\r\n       {\r\n          return(<div></div>)\r\n       }\r\n       else{\r\n       return(\r\n          <Square>\r\n               <TextField label=\" Product Name\" value={name} onChange={this.updateName.bind(this)}></TextField>\r\n               <TextField label=\" Price product\" value={price} onChange={this.updatePrice.bind(this)}></TextField>\r\n               <Button color=\"default\" variant=\"contained\" onClick={this.putToDatabase.bind(this)}>Update</Button>\r\n               <Button color=\"secondary\" variant=\"contained\" component={Link} to={'/'}> Back to start</Button>\r\n        </Square>\r\n\r\n       )\r\n   }\r\n}\r\n}\r\nexport default EditProduct","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Main from './components/Main';\r\nimport OneProduct from './components/Oneproduct';\r\nimport EditProduct from './components/EditProduct';\r\nclass App extends Component {\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n          <div>\r\n            <Route exact path='/' component={Main}/>\r\n            <Route path='/product/:itemId' component={OneProduct}/>\r\n            <Route path='/edit_product/:itemId' component={EditProduct}/>\r\n          </div>\r\n          </Router>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}